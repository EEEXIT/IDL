// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.6.1
// source: meeting/meeting.proto

package meeting

import (
	context "context"
	utils "github.com/EEEXIT/IDL/generated/go/utils"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type MeetingStatus int32

const (
	MeetingStatus_CREATED MeetingStatus = 0 // 모임 생성
	MeetingStatus_WAIT    MeetingStatus = 1 // 모임 대기
	MeetingStatus_PLAY    MeetingStatus = 2 // 모임중
	MeetingStatus_END     MeetingStatus = 3 // 모임 종료
)

// Enum value maps for MeetingStatus.
var (
	MeetingStatus_name = map[int32]string{
		0: "CREATED",
		1: "WAIT",
		2: "PLAY",
		3: "END",
	}
	MeetingStatus_value = map[string]int32{
		"CREATED": 0,
		"WAIT":    1,
		"PLAY":    2,
		"END":     3,
	}
)

func (x MeetingStatus) Enum() *MeetingStatus {
	p := new(MeetingStatus)
	*p = x
	return p
}

func (x MeetingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MeetingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_meeting_meeting_proto_enumTypes[0].Descriptor()
}

func (MeetingStatus) Type() protoreflect.EnumType {
	return &file_meeting_meeting_proto_enumTypes[0]
}

func (x MeetingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MeetingStatus.Descriptor instead.
func (MeetingStatus) EnumDescriptor() ([]byte, []int) {
	return file_meeting_meeting_proto_rawDescGZIP(), []int{0}
}

type ListMeetingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      uint64               `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PerPage   uint64               `protobuf:"varint,2,opt,name=perPage,proto3" json:"perPage,omitempty"`
	StartTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   *timestamp.Timestamp `protobuf:"bytes,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *ListMeetingRequest) Reset() {
	*x = ListMeetingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meeting_meeting_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMeetingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMeetingRequest) ProtoMessage() {}

func (x *ListMeetingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meeting_meeting_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMeetingRequest.ProtoReflect.Descriptor instead.
func (*ListMeetingRequest) Descriptor() ([]byte, []int) {
	return file_meeting_meeting_proto_rawDescGZIP(), []int{0}
}

func (x *ListMeetingRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListMeetingRequest) GetPerPage() uint64 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *ListMeetingRequest) GetStartTime() *timestamp.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ListMeetingRequest) GetEndTime() *timestamp.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type ListMeetingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meetings []*GetMeetingResponse `protobuf:"bytes,1,rep,name=meetings,proto3" json:"meetings,omitempty"`
	PageInfo *utils.Paginator      `protobuf:"bytes,2,opt,name=pageInfo,proto3" json:"pageInfo,omitempty"`
}

func (x *ListMeetingResponse) Reset() {
	*x = ListMeetingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meeting_meeting_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMeetingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMeetingResponse) ProtoMessage() {}

func (x *ListMeetingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meeting_meeting_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMeetingResponse.ProtoReflect.Descriptor instead.
func (*ListMeetingResponse) Descriptor() ([]byte, []int) {
	return file_meeting_meeting_proto_rawDescGZIP(), []int{1}
}

func (x *ListMeetingResponse) GetMeetings() []*GetMeetingResponse {
	if x != nil {
		return x.Meetings
	}
	return nil
}

func (x *ListMeetingResponse) GetPageInfo() *utils.Paginator {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

type CreateMeetingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderID           uint64 `protobuf:"varint,1,opt,name=LeaderID,proto3" json:"LeaderID,omitempty"`
	MeetingName        string `protobuf:"bytes,2,opt,name=MeetingName,proto3" json:"MeetingName,omitempty"`
	MeetingDescription string `protobuf:"bytes,3,opt,name=MeetingDescription,proto3" json:"MeetingDescription,omitempty"`
	MeetingCount       uint32 `protobuf:"varint,4,opt,name=MeetingCount,proto3" json:"MeetingCount,omitempty"`
	MinLevel           uint32 `protobuf:"varint,5,opt,name=MinLevel,proto3" json:"MinLevel,omitempty"`
	MaxLevel           uint32 `protobuf:"varint,6,opt,name=MaxLevel,proto3" json:"MaxLevel,omitempty"`
	MeetingLocation    string `protobuf:"bytes,7,opt,name=MeetingLocation,proto3" json:"MeetingLocation,omitempty"`
	CategoryID         uint64 `protobuf:"varint,8,opt,name=CategoryID,proto3" json:"CategoryID,omitempty"`
	MeetingDate        uint64 `protobuf:"varint,9,opt,name=MeetingDate,proto3" json:"MeetingDate,omitempty"`
}

func (x *CreateMeetingRequest) Reset() {

	*x = CreateMeetingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meeting_meeting_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMeetingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMeetingRequest) ProtoMessage() {}

func (x *CreateMeetingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meeting_meeting_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMeetingRequest.ProtoReflect.Descriptor instead.
func (*CreateMeetingRequest) Descriptor() ([]byte, []int) {
	return file_meeting_meeting_proto_rawDescGZIP(), []int{2}
}

func (x *CreateMeetingRequest) GetLeaderID() uint64 {
	if x != nil {
		return x.LeaderID
	}
	return 0
}

func (x *CreateMeetingRequest) GetMeetingName() string {
	if x != nil {
		return x.MeetingName
	}
	return ""
}

func (x *CreateMeetingRequest) GetMeetingDescription() string {
	if x != nil {
		return x.MeetingDescription
	}
	return ""
}

func (x *CreateMeetingRequest) GetMeetingCount() uint32 {
	if x != nil {
		return x.MeetingCount
	}
	return 0
}

func (x *CreateMeetingRequest) GetMinLevel() uint32 {
	if x != nil {
		return x.MinLevel
	}
	return 0
}

func (x *CreateMeetingRequest) GetMaxLevel() uint32 {
	if x != nil {
		return x.MaxLevel
	}
	return 0
}

func (x *CreateMeetingRequest) GetMeetingLocation() string {
	if x != nil {
		return x.MeetingLocation
	}
	return ""
}

func (x *CreateMeetingRequest) GetCategoryID() uint64 {
	if x != nil {
		return x.CategoryID
	}
	return 0
}

func (x *CreateMeetingRequest) GetMeetingDate() uint64 {
	if x != nil {
		return x.MeetingDate
	}
	return 0
}

type MeetingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MeetingRequest) Reset() {
	*x = MeetingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meeting_meeting_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeetingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeetingRequest) ProtoMessage() {}

func (x *MeetingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meeting_meeting_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeetingRequest.ProtoReflect.Descriptor instead.
func (*MeetingRequest) Descriptor() ([]byte, []int) {
	return file_meeting_meeting_proto_rawDescGZIP(), []int{3}
}

func (x *MeetingRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MeetingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MeetingResponse) Reset() {
	*x = MeetingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meeting_meeting_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeetingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeetingResponse) ProtoMessage() {}

func (x *MeetingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meeting_meeting_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeetingResponse.ProtoReflect.Descriptor instead.
func (*MeetingResponse) Descriptor() ([]byte, []int) {
	return file_meeting_meeting_proto_rawDescGZIP(), []int{4}
}

func (x *MeetingResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RequestJoinMeetingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  uint64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	ChatKey uint64 `protobuf:"varint,2,opt,name=chatKey,proto3" json:"chatKey,omitempty"`
}

func (x *RequestJoinMeetingResponse) Reset() {
	*x = RequestJoinMeetingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meeting_meeting_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestJoinMeetingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestJoinMeetingResponse) ProtoMessage() {}

func (x *RequestJoinMeetingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meeting_meeting_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestJoinMeetingResponse.ProtoReflect.Descriptor instead.
func (*RequestJoinMeetingResponse) Descriptor() ([]byte, []int) {
	return file_meeting_meeting_proto_rawDescGZIP(), []int{5}
}

func (x *RequestJoinMeetingResponse) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *RequestJoinMeetingResponse) GetChatKey() uint64 {
	if x != nil {
		return x.ChatKey
	}
	return 0
}

type ApproveJoinMeetingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeetingID uint64 `protobuf:"varint,1,opt,name=meetingID,proto3" json:"meetingID,omitempty"`
	UserID    uint64 `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *ApproveJoinMeetingRequest) Reset() {
	*x = ApproveJoinMeetingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meeting_meeting_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveJoinMeetingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveJoinMeetingRequest) ProtoMessage() {}

func (x *ApproveJoinMeetingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meeting_meeting_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveJoinMeetingRequest.ProtoReflect.Descriptor instead.
func (*ApproveJoinMeetingRequest) Descriptor() ([]byte, []int) {
	return file_meeting_meeting_proto_rawDescGZIP(), []int{6}
}

func (x *ApproveJoinMeetingRequest) GetMeetingID() uint64 {
	if x != nil {
		return x.MeetingID
	}
	return 0
}

func (x *ApproveJoinMeetingRequest) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type GetMeetingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Category    string        `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	MeetingTime string        `protobuf:"bytes,4,opt,name=meetingTime,proto3" json:"meetingTime,omitempty"`
	Location    string        `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	Status      MeetingStatus `protobuf:"varint,6,opt,name=status,proto3,enum=meeting.MeetingStatus" json:"status,omitempty"`
}

func (x *GetMeetingResponse) Reset() {
	*x = GetMeetingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meeting_meeting_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeetingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeetingResponse) ProtoMessage() {}

func (x *GetMeetingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meeting_meeting_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeetingResponse.ProtoReflect.Descriptor instead.
func (*GetMeetingResponse) Descriptor() ([]byte, []int) {
	return file_meeting_meeting_proto_rawDescGZIP(), []int{7}
}

func (x *GetMeetingResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetMeetingResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetMeetingResponse) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *GetMeetingResponse) GetMeetingTime() string {
	if x != nil {
		return x.MeetingTime
	}
	return ""
}

func (x *GetMeetingResponse) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *GetMeetingResponse) GetStatus() MeetingStatus {
	if x != nil {
		return x.Status
	}
	return MeetingStatus_CREATED
}

var File_meeting_meeting_proto protoreflect.FileDescriptor

var file_meeting_meeting_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x15, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb2, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x7c, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x08, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xcc, 0x02, 0x0a, 0x14, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20,
	0x0a, 0x0b, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2e, 0x0a, 0x12, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x4d, 0x65,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x69, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x4d, 0x69, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x61, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x4d, 0x61, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x0f,
	0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x44, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x4d, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x22, 0x20, 0x0a, 0x0e, 0x4d, 0x65, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x21, 0x0a, 0x0f, 0x4d, 0x65,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4e, 0x0a,
	0x1a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x4d, 0x65, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x68, 0x61, 0x74, 0x4b, 0x65, 0x79, 0x22, 0x51, 0x0a,
	0x19, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x4d, 0x65, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d,
	0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x22, 0xc2, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x39, 0x0a, 0x0d, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x41, 0x49, 0x54, 0x10, 0x01, 0x12, 0x08, 0x0a,
	0x04, 0x50, 0x4c, 0x41, 0x59, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x4e, 0x44, 0x10, 0x03,
	0x32, 0xb0, 0x06, 0x0a, 0x0e, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x60, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x65,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x10, 0x22, 0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0x5f, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x17, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x15, 0x1a, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x5f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x17, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x65, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x15, 0x2a, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x5d, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x6d,
	0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x5c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x17, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4d,
	0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x12, 0x12, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x6f, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4a,
	0x6f, 0x69, 0x6e, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x17, 0x2e, 0x6d, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15,
	0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x75, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x4a, 0x6f, 0x69, 0x6e, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x2e, 0x6d, 0x65,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4a, 0x6f, 0x69,
	0x6e, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x2f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x55, 0x0a, 0x09,
	0x4d, 0x79, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x17, 0x2e, 0x6d, 0x65, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x16, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x2f, 0x6d, 0x65, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x45, 0x45, 0x45, 0x58, 0x49, 0x54, 0x2f, 0x49, 0x44, 0x4c, 0x2f, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_meeting_meeting_proto_rawDescOnce sync.Once
	file_meeting_meeting_proto_rawDescData = file_meeting_meeting_proto_rawDesc
)

func file_meeting_meeting_proto_rawDescGZIP() []byte {
	file_meeting_meeting_proto_rawDescOnce.Do(func() {
		file_meeting_meeting_proto_rawDescData = protoimpl.X.CompressGZIP(file_meeting_meeting_proto_rawDescData)
	})
	return file_meeting_meeting_proto_rawDescData
}

var file_meeting_meeting_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_meeting_meeting_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_meeting_meeting_proto_goTypes = []interface{}{
	(MeetingStatus)(0),                 // 0: meeting.MeetingStatus
	(*ListMeetingRequest)(nil),         // 1: meeting.ListMeetingRequest
	(*ListMeetingResponse)(nil),        // 2: meeting.ListMeetingResponse
	(*CreateMeetingRequest)(nil),       // 3: meeting.CreateMeetingRequest
	(*MeetingRequest)(nil),             // 4: meeting.MeetingRequest
	(*MeetingResponse)(nil),            // 5: meeting.MeetingResponse
	(*RequestJoinMeetingResponse)(nil), // 6: meeting.RequestJoinMeetingResponse
	(*ApproveJoinMeetingRequest)(nil),  // 7: meeting.ApproveJoinMeetingRequest
	(*GetMeetingResponse)(nil),         // 8: meeting.GetMeetingResponse
	(*timestamp.Timestamp)(nil),        // 9: google.protobuf.Timestamp
	(*utils.Paginator)(nil),            // 10: utils.Paginator
}
var file_meeting_meeting_proto_depIdxs = []int32{
	9,  // 0: meeting.ListMeetingRequest.startTime:type_name -> google.protobuf.Timestamp
	9,  // 1: meeting.ListMeetingRequest.endTime:type_name -> google.protobuf.Timestamp
	8,  // 2: meeting.ListMeetingResponse.meetings:type_name -> meeting.GetMeetingResponse
	10, // 3: meeting.ListMeetingResponse.pageInfo:type_name -> utils.Paginator
	0,  // 4: meeting.GetMeetingResponse.status:type_name -> meeting.MeetingStatus
	3,  // 5: meeting.MeetingService.CreateMeeting:input_type -> meeting.CreateMeetingRequest
	4,  // 6: meeting.MeetingService.UpdateMeeting:input_type -> meeting.MeetingRequest
	4,  // 7: meeting.MeetingService.DeleteMeeting:input_type -> meeting.MeetingRequest
	1,  // 8: meeting.MeetingService.ListMeeting:input_type -> meeting.ListMeetingRequest
	4,  // 9: meeting.MeetingService.GetMeeting:input_type -> meeting.MeetingRequest
	4,  // 10: meeting.MeetingService.RequestJoinMeeting:input_type -> meeting.MeetingRequest
	7,  // 11: meeting.MeetingService.ApproveJoinMeeting:input_type -> meeting.ApproveJoinMeetingRequest
	4,  // 12: meeting.MeetingService.MyMeeting:input_type -> meeting.MeetingRequest
	5,  // 13: meeting.MeetingService.CreateMeeting:output_type -> meeting.MeetingResponse
	5,  // 14: meeting.MeetingService.UpdateMeeting:output_type -> meeting.MeetingResponse
	5,  // 15: meeting.MeetingService.DeleteMeeting:output_type -> meeting.MeetingResponse
	2,  // 16: meeting.MeetingService.ListMeeting:output_type -> meeting.ListMeetingResponse
	8,  // 17: meeting.MeetingService.GetMeeting:output_type -> meeting.GetMeetingResponse
	6,  // 18: meeting.MeetingService.RequestJoinMeeting:output_type -> meeting.RequestJoinMeetingResponse
	8,  // 19: meeting.MeetingService.ApproveJoinMeeting:output_type -> meeting.GetMeetingResponse
	4,  // 20: meeting.MeetingService.MyMeeting:output_type -> meeting.MeetingRequest
	13, // [13:21] is the sub-list for method output_type
	5,  // [5:13] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_meeting_meeting_proto_init() }
func file_meeting_meeting_proto_init() {
	if File_meeting_meeting_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_meeting_meeting_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMeetingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meeting_meeting_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMeetingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meeting_meeting_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMeetingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meeting_meeting_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeetingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meeting_meeting_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeetingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meeting_meeting_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestJoinMeetingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meeting_meeting_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveJoinMeetingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meeting_meeting_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeetingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_meeting_meeting_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_meeting_meeting_proto_goTypes,
		DependencyIndexes: file_meeting_meeting_proto_depIdxs,
		EnumInfos:         file_meeting_meeting_proto_enumTypes,
		MessageInfos:      file_meeting_meeting_proto_msgTypes,
	}.Build()
	File_meeting_meeting_proto = out.File
	file_meeting_meeting_proto_rawDesc = nil
	file_meeting_meeting_proto_goTypes = nil
	file_meeting_meeting_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MeetingServiceClient is the client API for MeetingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MeetingServiceClient interface {
	//모임 생성
	CreateMeeting(ctx context.Context, in *CreateMeetingRequest, opts ...grpc.CallOption) (*MeetingResponse, error)
	//모임 수정
	UpdateMeeting(ctx context.Context, in *MeetingRequest, opts ...grpc.CallOption) (*MeetingResponse, error)
	//모임 삭제
	DeleteMeeting(ctx context.Context, in *MeetingRequest, opts ...grpc.CallOption) (*MeetingResponse, error)
	//모임 리스트
	ListMeeting(ctx context.Context, in *ListMeetingRequest, opts ...grpc.CallOption) (*ListMeetingResponse, error)
	//모임 상세
	GetMeeting(ctx context.Context, in *MeetingRequest, opts ...grpc.CallOption) (*GetMeetingResponse, error)
	//모임 가입 요청
	RequestJoinMeeting(ctx context.Context, in *MeetingRequest, opts ...grpc.CallOption) (*RequestJoinMeetingResponse, error)
	//모임 가입 승인
	ApproveJoinMeeting(ctx context.Context, in *ApproveJoinMeetingRequest, opts ...grpc.CallOption) (*GetMeetingResponse, error)
	//모임 가입 요청
	MyMeeting(ctx context.Context, in *MeetingRequest, opts ...grpc.CallOption) (*MeetingRequest, error)
}

type meetingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMeetingServiceClient(cc grpc.ClientConnInterface) MeetingServiceClient {
	return &meetingServiceClient{cc}
}

func (c *meetingServiceClient) CreateMeeting(ctx context.Context, in *CreateMeetingRequest, opts ...grpc.CallOption) (*MeetingResponse, error) {
	out := new(MeetingResponse)
	err := c.cc.Invoke(ctx, "/meeting.MeetingService/CreateMeeting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meetingServiceClient) UpdateMeeting(ctx context.Context, in *MeetingRequest, opts ...grpc.CallOption) (*MeetingResponse, error) {
	out := new(MeetingResponse)
	err := c.cc.Invoke(ctx, "/meeting.MeetingService/UpdateMeeting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meetingServiceClient) DeleteMeeting(ctx context.Context, in *MeetingRequest, opts ...grpc.CallOption) (*MeetingResponse, error) {
	out := new(MeetingResponse)
	err := c.cc.Invoke(ctx, "/meeting.MeetingService/DeleteMeeting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meetingServiceClient) ListMeeting(ctx context.Context, in *ListMeetingRequest, opts ...grpc.CallOption) (*ListMeetingResponse, error) {
	out := new(ListMeetingResponse)
	err := c.cc.Invoke(ctx, "/meeting.MeetingService/ListMeeting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meetingServiceClient) GetMeeting(ctx context.Context, in *MeetingRequest, opts ...grpc.CallOption) (*GetMeetingResponse, error) {
	out := new(GetMeetingResponse)
	err := c.cc.Invoke(ctx, "/meeting.MeetingService/GetMeeting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meetingServiceClient) RequestJoinMeeting(ctx context.Context, in *MeetingRequest, opts ...grpc.CallOption) (*RequestJoinMeetingResponse, error) {
	out := new(RequestJoinMeetingResponse)
	err := c.cc.Invoke(ctx, "/meeting.MeetingService/RequestJoinMeeting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meetingServiceClient) ApproveJoinMeeting(ctx context.Context, in *ApproveJoinMeetingRequest, opts ...grpc.CallOption) (*GetMeetingResponse, error) {
	out := new(GetMeetingResponse)
	err := c.cc.Invoke(ctx, "/meeting.MeetingService/ApproveJoinMeeting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meetingServiceClient) MyMeeting(ctx context.Context, in *MeetingRequest, opts ...grpc.CallOption) (*MeetingRequest, error) {
	out := new(MeetingRequest)
	err := c.cc.Invoke(ctx, "/meeting.MeetingService/MyMeeting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MeetingServiceServer is the server API for MeetingService service.
type MeetingServiceServer interface {
	//모임 생성
	CreateMeeting(context.Context, *CreateMeetingRequest) (*MeetingResponse, error)
	//모임 수정
	UpdateMeeting(context.Context, *MeetingRequest) (*MeetingResponse, error)
	//모임 삭제
	DeleteMeeting(context.Context, *MeetingRequest) (*MeetingResponse, error)
	//모임 리스트
	ListMeeting(context.Context, *ListMeetingRequest) (*ListMeetingResponse, error)
	//모임 상세
	GetMeeting(context.Context, *MeetingRequest) (*GetMeetingResponse, error)
	//모임 가입 요청
	RequestJoinMeeting(context.Context, *MeetingRequest) (*RequestJoinMeetingResponse, error)
	//모임 가입 승인
	ApproveJoinMeeting(context.Context, *ApproveJoinMeetingRequest) (*GetMeetingResponse, error)
	//모임 가입 요청
	MyMeeting(context.Context, *MeetingRequest) (*MeetingRequest, error)
}

// UnimplementedMeetingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMeetingServiceServer struct {
}

func (*UnimplementedMeetingServiceServer) CreateMeeting(context.Context, *CreateMeetingRequest) (*MeetingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMeeting not implemented")
}
func (*UnimplementedMeetingServiceServer) UpdateMeeting(context.Context, *MeetingRequest) (*MeetingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMeeting not implemented")
}
func (*UnimplementedMeetingServiceServer) DeleteMeeting(context.Context, *MeetingRequest) (*MeetingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMeeting not implemented")
}
func (*UnimplementedMeetingServiceServer) ListMeeting(context.Context, *ListMeetingRequest) (*ListMeetingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMeeting not implemented")
}
func (*UnimplementedMeetingServiceServer) GetMeeting(context.Context, *MeetingRequest) (*GetMeetingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMeeting not implemented")
}
func (*UnimplementedMeetingServiceServer) RequestJoinMeeting(context.Context, *MeetingRequest) (*RequestJoinMeetingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestJoinMeeting not implemented")
}
func (*UnimplementedMeetingServiceServer) ApproveJoinMeeting(context.Context, *ApproveJoinMeetingRequest) (*GetMeetingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApproveJoinMeeting not implemented")
}
func (*UnimplementedMeetingServiceServer) MyMeeting(context.Context, *MeetingRequest) (*MeetingRequest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MyMeeting not implemented")
}

func RegisterMeetingServiceServer(s *grpc.Server, srv MeetingServiceServer) {
	s.RegisterService(&_MeetingService_serviceDesc, srv)
}

func _MeetingService_CreateMeeting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMeetingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingServiceServer).CreateMeeting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/meeting.MeetingService/CreateMeeting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingServiceServer).CreateMeeting(ctx, req.(*CreateMeetingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeetingService_UpdateMeeting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MeetingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingServiceServer).UpdateMeeting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/meeting.MeetingService/UpdateMeeting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingServiceServer).UpdateMeeting(ctx, req.(*MeetingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeetingService_DeleteMeeting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MeetingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingServiceServer).DeleteMeeting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/meeting.MeetingService/DeleteMeeting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingServiceServer).DeleteMeeting(ctx, req.(*MeetingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeetingService_ListMeeting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListMeetingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingServiceServer).ListMeeting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/meeting.MeetingService/ListMeeting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingServiceServer).ListMeeting(ctx, req.(*ListMeetingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeetingService_GetMeeting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MeetingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingServiceServer).GetMeeting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/meeting.MeetingService/GetMeeting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingServiceServer).GetMeeting(ctx, req.(*MeetingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeetingService_RequestJoinMeeting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MeetingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingServiceServer).RequestJoinMeeting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/meeting.MeetingService/RequestJoinMeeting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingServiceServer).RequestJoinMeeting(ctx, req.(*MeetingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeetingService_ApproveJoinMeeting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApproveJoinMeetingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingServiceServer).ApproveJoinMeeting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/meeting.MeetingService/ApproveJoinMeeting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingServiceServer).ApproveJoinMeeting(ctx, req.(*ApproveJoinMeetingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeetingService_MyMeeting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MeetingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingServiceServer).MyMeeting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/meeting.MeetingService/MyMeeting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingServiceServer).MyMeeting(ctx, req.(*MeetingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MeetingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "meeting.MeetingService",
	HandlerType: (*MeetingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateMeeting",
			Handler:    _MeetingService_CreateMeeting_Handler,
		},
		{
			MethodName: "UpdateMeeting",
			Handler:    _MeetingService_UpdateMeeting_Handler,
		},
		{
			MethodName: "DeleteMeeting",
			Handler:    _MeetingService_DeleteMeeting_Handler,
		},
		{
			MethodName: "ListMeeting",
			Handler:    _MeetingService_ListMeeting_Handler,
		},
		{
			MethodName: "GetMeeting",
			Handler:    _MeetingService_GetMeeting_Handler,
		},
		{
			MethodName: "RequestJoinMeeting",
			Handler:    _MeetingService_RequestJoinMeeting_Handler,
		},
		{
			MethodName: "ApproveJoinMeeting",
			Handler:    _MeetingService_ApproveJoinMeeting_Handler,
		},
		{
			MethodName: "MyMeeting",
			Handler:    _MeetingService_MyMeeting_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "meeting/meeting.proto",
}
